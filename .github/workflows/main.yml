name: CI

on:
  push:
    tags:
      - "v*.*.*"

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Dependencies
        run: |
          wget -nv https://golang.org/dl/go1.17.2.linux-amd64.tar.gz \
          && sudo rm -rf /usr/local/go \
          && sudo rm -rf m -rf /usr/bin/go \
          && sudo tar -C /usr/local -xzf go1.17.2.linux-amd64.tar.gz \
          && export PATH=$PATH:/usr/local/go/bin \
          && go version
      - name: Build
        run: |
          echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV 
          TAG="${GITHUB_REF#refs/tags/}"
          HASH=$(git log -n1 --pretty=format:%h)
          export PATH=$PATH:/usr/local/go/bin \
          && env GOOS=linux GOARCH=amd64 go build -ldflags "-X 'omc/vars.OMCVersionTag=${TAG}' -X omc/vars.OMCVersionHash=${HASH}" -o omc \
          && tar -cvf omc-${TAG}_Linux_x86_64.tar.gz omc && rm -rf omc \
          && env GOOS=darwin GOARCH=amd64 go build -ldflags "-X 'omc/vars.OMCVersionTag=${TAG}' -X omc/vars.OMCVersionHash=${HASH}" -o omc \
          && tar -cvf omc-${TAG}_Darwin_x86_64.tar.gz omc && rm -rf omc \
          && env GOOS=windows GOARCH=amd64 go build -ldflags "-X 'omc/vars.OMCVersionTag=${TAG}' -X omc/vars.OMCVersionHash=${HASH}" -o omc.exe \
          && zip omc-${TAG}_Windows_x86_64.zip omc.exe \
          && md5sum omc-${TAG}_Linux_x86_64.tar.gz | tee -a checksums.txt \
          && md5sum omc-${TAG}_Darwin_x86_64.tar.gz | tee -a checksums.txt \
          && md5sum omc-${TAG}_Windows_x86_64.zip | tee -a checksums.txt
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          files: |
            checksums.txt
            omc-${{ env.RELEASE_TAG }}_Linux_x86_64.tar.gz 
            omc-${{ env.RELEASE_TAG }}_Darwin_x86_64.tar.gz
            omc-${{ env.RELEASE_TAG }}_Windows_x86_64.zip
          name: "${{ env.RELEASE_TAG }} release"